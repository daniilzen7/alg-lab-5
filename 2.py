"""
Определяем матрицу размерностью n с помощью модуля random и нескольких циклов.
Запрашиваем у пользователя искомое число.

После этого начинаем двигаться в матрице с верхнего правого элемента. Если данное число
меньше исходного, то нам нужно сдвинуться влево по строке, иначе нужно двигаться по столбцу.
Перемещаемся так по матрице, пока не найдем исходное число. Если же не нашлось совпадений,
то тогда такого числа в матрице не существует.
"""

import random

a = ''

n = int(input('Введите размерность матрицы: '))
A = [[0 for i in range(n)] for j in range(n)]
for i in range(n):
    for j in range(n):
        if i == 0 and j == 0:
            A[i][j] = random.randint(1, 10)
        elif i == 0:
            A[i][j] = A[i][j - 1] + random.randint(1, 5)
        elif j == 0:
            A[i][j] = A[i - 1][j] + random.randint(1, 5)
        else:
            A[i][j] = max(A[i - 1][j], A[i][j - 1]) + random.randint(1, 5)
for i in range(n):
    print(A[i])
# подразумевается, что пользователь вводит всё упорядоченно(можно рандомом сгенерить но муторно)
num = int(input('Введите искомое число: '))

j = n - 1  # столбцовый индекс
i = 0  # строчный индекс
txt = ''
while (n - 1) >= j >= 0 and (n - 1) >= i >= 0:
    if A[i][j] > num:  # двигаемся с правого верхнего угла
        j -= 1
    elif A[i][j] < num:
        i += 1
    elif A[i][j] == num:
        txt = f'Число {num} нашлось в {i+1}-ой строке в {j+1}-м столбце'
        break
if txt == '':
    print(f'Число {num} не нашлось')
else:
    print(txt)
